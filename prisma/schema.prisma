// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DOSEN
  USER
}

model user {
  id       String @id @db.VarChar(14)
  username String @db.VarChar(15)
  email    String @unique @db.VarChar(150)
  passowrd String @db.VarChar(150)
  role     Role   @default(USER)

  profile  profile?
  diskusi  diskusi[]
  komentar komentar[]
  reply    reply[]
  suka     suka[]

  @@index([username])
}

model profile {
  id        Int     @id @default(autoincrement())
  nama      String  @db.VarChar(150)
  nim       String  @db.VarChar(12)
  tgl_lahir BigInt?
  lokasi    String? @db.VarChar(150)

  angkatan  Int?
  bio       String?  @db.Text
  foto      String?  @db.VarChar(150)
  create_at DateTime @default(now())
  update_at DateTime @updatedAt

  user   user   @relation(fields: [userId], references: [id])
  userId String @unique @db.VarChar(14)

  @@index([nama])
}

model diskusi {
  id    Int    @id @default(autoincrement())
  judul String @db.VarChar(250)
  desk  String @db.Text

  user     user           @relation(fields: [userId], references: [id])
  userId   String         @unique @db.VarChar(14)
  tags     tags_diskusi[]
  komentar komentar[]

  @@index([judul])
}

model tags {
  id      Int            @id @default(autoincrement())
  name    String         @db.VarChar(150)
  desk    String         @db.Text
  diskusi tags_diskusi[]
}

model tags_diskusi {
  diksusi   diskusi @relation(fields: [diskusiId], references: [id])
  diskusiId Int
  tags      tags    @relation(fields: [tagsId], references: [id])
  tagsId    Int

  @@id([diskusiId, tagsId])
}

model komentar {
  id     Int    @id @default(autoincrement())
  konten String @db.Text

  user      user    @relation(fields: [userId], references: [id])
  userId    String  @unique @db.VarChar(14)
  diksusi   diskusi @relation(fields: [diskusiId], references: [id])
  diskusiId Int     @unique
  reply     reply[]
  suka      suka[]
}

model reply {
  id      Int    @id @default(autoincrement())
  kontent String @db.Text

  komentar   komentar @relation(fields: [komentarId], references: [id])
  komentarId Int      @unique
  user       user     @relation(fields: [userId], references: [id])
  userId     String   @unique @db.VarChar(14)
}

model suka {
  id     Int @id @default(autoincrement())
  jumlah Int

  user       user     @relation(fields: [userId], references: [id])
  userId     String   @unique @db.VarChar(14)
  komentar   komentar @relation(fields: [komentarId], references: [id])
  komentarId Int      @unique
}
