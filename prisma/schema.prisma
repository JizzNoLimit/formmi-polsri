// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DOSEN
  USER
}

model User {
  id       String @id @db.VarChar(12)
  username String @db.VarChar(15)
  email    String @unique @db.VarChar(150)
  passowrd String @db.VarChar(150)
  role     Role   @default(USER)

  profile          Profile?
  diskusi          Diskusi[]
  komentar         Komentar[]
  like             Like[]
  komentar_balasan Komentar_balasan[]

  @@index([username])
}

model Profile {
  id           Int     @id @default(autoincrement())
  nama         String  @db.VarChar(150)
  nim          String  @db.VarChar(12)
  tempat_lahir String? @db.VarChar(150)
  tgl_lahir    BigInt?
  lokasi       String? @db.VarChar(150)
  organisasi   String? @db.VarChar(150)

  angkatan  Int?
  bio       String?  @db.Text
  foto      String?  @db.VarChar(150)
  create_at DateTime @default(now())
  update_at DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@index([nama])
}

model Diskusi {
  id    Int    @id @default(autoincrement())
  judul String @db.Text
  desk  String @db.Text

  tags     Tags[]
  komentar Komentar[]

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @unique
}

model Tags {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(150)
  desk String @db.Text

  diskusi   Diskusi @relation(fields: [diskusiId], references: [id])
  diskusiId Int     @unique
}

model Komentar {
  id     Int    @id @default(autoincrement())
  konten String @db.Text

  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
  diskusi   Diskusi @relation(fields: [diskusiId], references: [id])
  diskusiId Int     @unique

  like             Like[]
  komentar_balasan Komentar_balasan[]
}

model Komentar_balasan {
  id      Int    @id @default(autoincrement())
  kontent String @db.Text

  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique
  komentar   Komentar @relation(fields: [komentarId], references: [id])
  komentarId Int      @unique
}

model Like {
  id     Int @id @default(autoincrement())
  jumlah Int

  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique
  komentar   Komentar @relation(fields: [komentarId], references: [id])
  komentarId Int      @unique
}
